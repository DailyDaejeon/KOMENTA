<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.komenta.be.mapper.VodMapper">

    <select id="selectHistoryById" resultType="com.komenta.be.model.vod.VodHistoryDTO" parameterType="int">
        select vh_id, vh_watching_time, ve_id, vh_score, vh_good
        from vod_history
        where u_id = #{u_id}
    </select>


    <select id="selectEpisodeById" resultType="com.komenta.be.model.vod.VodEpisodeAllDTO" parameterType="int">
        select C.ve_id, C.ve_episode_num, C.ve_contents,C.ve_upload_date, C.v_id, C.v_title, C.v_summary, C.v_director, C.v_actors, C.v_age_grade, C.v_poster, D.g_name, D.gd_name
        from
            (select A.ve_id, A.ve_episode_num, A.ve_contents, A.ve_admin, A.ve_upload_date, A.v_id, B.v_title, B.v_summary, B.v_director, B.v_actors, B.v_age_grade, B.v_poster, B.gd_id
             from vod_episode A left outer join vod B
                                                on A.v_id = B.v_id) C
                left outer join
            (select A.gd_id, A.gd_name, A.g_id, B.g_name
             from genre_detail A left outer join genre B
                                                 on A.g_id = B.g_id) D
            on C.gd_id = D.gd_id
        where C.ve_id = #{ve_id}
    </select>



    <select id = "getVodListRecent" resultType="com.komenta.be.model.vod.VodEpisodeDTO">
        SELECT E.ve_id, E.ve_episode_num, E.ve_upload_date, E.ve_contents, E.ve_admin, F.v_id, F.v_title, F.gd_id, F.g_name, F.gd_name
        FROM vod_episode E LEFT OUTER JOIN (SELECT C.v_id, C.v_title, C.v_summary, C.v_director, C.v_actors, C.v_age_grade, C.v_poster, D.gd_id, D.g_name, D.gd_name
                                            from vod C LEFT OUTER JOIN (SELECT A.gd_id, B.g_id, B.g_name, A.gd_name
                                                                        FROM genre_detail A INNER JOIN genre B
                                                                        ON A.g_id = B.g_id) D
                                            ON C.gd_id = D.gd_id) F
        ON E.v_id = F.v_id
        ORDER BY ve_upload_date desc
    </select>



    <select id = "getVodListComment" parameterType="int" resultType="com.komenta.be.model.vod.VodEpisodeDTO">
        SELECT X.ve_id, X.ve_episode_num, X.ve_upload_date, X.ve_contents, X.ve_admin, X.v_id, X.v_title, X.gd_id, X.g_name, X.gd_name, (case when Y.c_count IS NULL then 0 ELSE Y.c_count END) AS c_count
        FROM (SELECT E.ve_id, E.ve_episode_num, E.ve_upload_date, E.ve_contents, E.ve_admin, F.v_id, F.v_title, F.gd_id, F.g_name, F.gd_name
              FROM vod_episode E LEFT OUTER JOIN (SELECT C.v_id, C.v_title, C.v_summary, C.v_director, C.v_actors, C.v_age_grade, C.v_poster, D.gd_id, D.g_name, D.gd_name
                                                  from vod C LEFT OUTER JOIN (SELECT A.gd_id, B.g_id, B.g_name, A.gd_name
                                                                              FROM genre_detail A INNER JOIN genre B
                                                                              ON A.g_id = B.g_id) D
                                                  ON C.gd_id = D.gd_id) F
              ON E.v_id = F.v_id) X LEFT OUTER JOIN (SELECT ve_id, COUNT(*) AS c_count
                                                     FROM comment_info
                                                     GROUP BY ve_id) Y
        ON X.ve_id = Y.ve_id
        WHERE A.v_id = #{v_id}
        ORDER BY c_count desc;

    </select>


    <select id = "getVodListWatching" resultType="com.komenta.be.model.vod.VodEpisodeDTO">
        SELECT X.ve_id, X.ve_episode_num, X.ve_upload_date, X.ve_contents, X.ve_admin, X.v_id, X.v_title, X.gd_id, X.g_name, X.gd_name, (case when Y.w_count IS NULL then 0 ELSE Y.w_count END) AS w_count
        FROM (SELECT E.ve_id, E.ve_episode_num, E.ve_upload_date, E.ve_contents, E.ve_admin, F.v_id, F.v_title, F.gd_id, F.g_name, F.gd_name
              FROM vod_episode E LEFT OUTER JOIN (SELECT C.v_id, C.v_title, C.v_summary, C.v_director, C.v_actors, C.v_age_grade, C.v_poster, D.gd_id, D.g_name, D.gd_name
                                                  from vod C LEFT OUTER JOIN (SELECT A.gd_id, B.g_id, B.g_name, A.gd_name
                                                                              FROM genre_detail A INNER JOIN genre B
                                                                                                             ON A.g_id = B.g_id) D
                                                                             ON C.gd_id = D.gd_id) F
                                                 ON E.v_id = F.v_id) X LEFT OUTER JOIN (SELECT ve_id, COUNT(*) AS w_count
                                                                                        FROM vod_history
                                                                                        GROUP BY ve_id) Y
                                                                                       ON X.ve_id = Y.ve_id
        ORDER BY w_count desc;
    </select>

    <select id="getVodInfoForUser" resultType="com.komenta.be.model.vod.VodInfoForUserDTO">
        SELECT F.v_id, F.v_title, F.g_name, F.gd_name, F.v_actors, F.v_director, A.ve_id, A.ve_episode_num
        FROM vod_episode A LEFT OUTER JOIN (SELECT D.v_id, D.v_title, D.v_summary, D.v_director, D.v_actors, D.v_age_grade, D.v_poster, D.gd_id, D.gd_name, E.g_id, E.g_name
                                            FROM (SELECT B.v_id, B.v_title, B.v_summary, B.v_director, B.v_actors, B.v_age_grade, B.v_poster, C.gd_id, C.gd_name, C.g_id
                                                  FROM vod B LEFT OUTER JOIN genre_detail C
                                                  ON B.gd_id = C.gd_id) D LEFT OUTER JOIN genre E
                                            ON D.g_id = E.g_id) F
        ON A.v_id = F.v_id
        ORDER BY ve_episode_num desc
    </select>

</mapper>
